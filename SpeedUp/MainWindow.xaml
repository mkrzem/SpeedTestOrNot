<Window x:Class="SpeedUp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SpeedUp"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:custom="clr-namespace:SpeedUp.CustomUI"
        mc:Ignorable="d"
        Title="SpeedUp!" Height="350" Width="525"
        DataContext="{Binding Main, Source={StaticResource Locator}}">

    <Window.Resources>
        <LinearGradientBrush x:Key="backgroundBrush">
            <GradientStop Offset="0" Color="Black"/>
            <GradientStop Offset="0.75" Color="Red"/>
            <GradientStop Offset="1" Color="OrangeRed"/>
        </LinearGradientBrush>
        <Style x:Key="buttons" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource backgroundBrush}"/>
            <Setter Property="Foreground" Value="Salmon"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="0,0,5,0"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Black"/>            
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid RenderTransformOrigin=".5,.5">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <!-- Apply to all transitions... -->
                                            
                                        <VisualTransition GeneratedDuration="0:0:.4"/>
                                            
                                        <!-- ...but override for transitions to/from Pressed: -->
                                            
                                        <VisualTransition To="Pressed" GeneratedDuration="0"/>
                                            
                                        <VisualTransition From="Pressed" GeneratedDuration="0"/>
                                          
                                    </VisualStateGroup.Transitions>
                                    <VisualState Name="Normal"/>
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="outerCircle"
                              Storyboard.TargetProperty=
                                                            "(Ellipse.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                            To="Orange" Duration="0"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                             Storyboard.TargetProperty="ScaleX" To=".9"
                                                             Duration="0"/>
                                            <DoubleAnimation Storyboard.TargetName="scaleTransform"
                               Storyboard.TargetProperty="ScaleY" To=".9"
                               Duration="0"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="outerCircle"
                              Storyboard.TargetProperty=
     "(Ellipse.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
                              To="Gray" Duration="0"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup Name="FocusStates">
                                    <VisualStateGroup.Transitions>
                                            
                                        <!-- Apply only in one direction: -->
                                            
                                        <VisualTransition To="Unfocused" GeneratedDuration="0:0:.4">
                                                
                                            <VisualTransition.GeneratedEasingFunction>
                                                      
                                                <QuadraticEase/>
                                                    
                                            </VisualTransition.GeneratedEasingFunction>
                                                
                                        </VisualTransition>
                                          
                                    </VisualStateGroup.Transitions>
                                    <VisualState Name="Unfocused"/>
                                    <VisualState Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty=
     "(Grid.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.Y)"
                               To="-20" AutoReverse="True"
                               RepeatBehavior="Forever" Duration="0:0:.4">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="scaleTransform"/>
                                    <TranslateTransform x:Name="translateTransform"/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Ellipse x:Name="outerCircle">
                                <Ellipse.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0"
              Color="{Binding RelativeSource={RelativeSource TemplatedParent},
                              Path=Background.Color}"/>
                                        <GradientStop x:Name="highlightGradientStop" Offset="1" Color="Red"/>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Ellipse RenderTransformOrigin=".5,.5">
                                <Ellipse.RenderTransform>
                                    <ScaleTransform ScaleX=".8" ScaleY=".8"/>
                                </Ellipse.RenderTransform>
                                <Ellipse.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="White"/>
                                        <GradientStop Offset="1" Color="Transparent"/>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Viewbox>
                                <ContentPresenter Margin="{TemplateBinding Padding}"/>
                            </Viewbox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilty"/>
    </Window.Resources>
    <Grid>
        <DockPanel>
            <DockPanel DockPanel.Dock="Top" Background="{StaticResource backgroundBrush}">
                <TextBox Text="{Binding CarCount, Mode=TwoWay}" Width="50" Margin="0,0,5,0"
                         DockPanel.Dock="Left" IsEnabled="{Binding !IsBusy}"/>
                <Button Style="{StaticResource buttons}" Command="{Binding Save}" DockPanel.Dock="Left">Save</Button>
                <Button Style="{StaticResource buttons}" Command="{Binding Read}" DockPanel.Dock="Left">Read</Button>
                <Button Style="{StaticResource buttons}" Command="{Binding ClearDatabase}" 
                        DockPanel.Dock="Right" HorizontalAlignment="Right">Clear Database</Button>
                <ComboBox DockPanel.Dock="Left" FontWeight="Bold" SelectedIndex="0"
                          VerticalContentAlignment="Center" IsEnabled="{Binding !IsBusy}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding DatabaseChanged}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ComboBoxItem Content="NHibernate"/>
                    <ComboBoxItem Content="MongoDB"/>
                </ComboBox>
            </DockPanel>
            <TextBox DockPanel.Dock="Bottom" Text="{Binding Query}" FontWeight="Bold"/>
            <StackPanel>
                <TextBlock>
                    <Run Text="{Binding Cars.Count, Mode=OneWay}"/>
                    <Run Text="Cars in database"/>
                </TextBlock>
                <TextBlock TextAlignment="Center" FontWeight="Bold" FontSize="20" Padding="20">
                    <Run Text="Read Time elapsed: "/>
                    <Run Text="{Binding ReadTimeElapsed}"/>
                </TextBlock>
                <Border BorderThickness="5" BorderBrush="Bisque" Padding="0">
                <TextBlock TextAlignment="Center" FontWeight="Bold" FontSize="20" Padding="20">
                    <Run Text="Save Time elapsed: "/>
                    <Run Text="{Binding SaveTimeElapsed}"/>
                        <TextBlock.Style>
                            <Style>
                                <Setter Property="TextBlock.Background">
                                    <Setter.Value>
                                        <LinearGradientBrush>
                                            <GradientStop Offset="0" Color="White"/>
                                            <GradientStop Offset="1" Color="Bisque"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TextBlock.Style>
                </TextBlock>
                </Border>
                <TextBlock TextAlignment="Center" FontWeight="Bold" FontSize="20" Padding="20">
                    <Run Text="Copy Time elapsed: "/>
                    <Run Text="{Binding CopyTimeElapsed}"/>
                </TextBlock>
            </StackPanel>
            
        </DockPanel>

        <Border BorderBrush="Black" BorderThickness="1" Background="#7f000000" 
                Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilty}}">
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <Trigger Property="Visibility" Value="Visible">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" From="#7f000000" To="#ff000000" AutoReverse="True"
                                                        Duration="0:0:2" RepeatBehavior="Forever"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Setter Property="Background" Value="#ff000000"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            
            <Grid>
                <StackPanel VerticalAlignment="Center">
                    <!--<custom:RadialPanel Width="15" Height="15" x:Name="BusyMarker">
                        <Ellipse />
                        <Ellipse />
                        <Ellipse />
                        <Ellipse />
                        <Ellipse Width="5" Height="5" Fill="#4Effffff" />
                        <Ellipse Width="5" Height="5" Fill="#6Fffffff" />                        
                        <Ellipse Width="5" Height="5" Fill="#AFffffff" />
                        <Ellipse Width="5" Height="5" Fill="#DFffffff" />
                        <Ellipse Width="5" Height="5" Fill="#ffffff"  />
                        
                        <custom:RadialPanel.RenderTransform>
                            <RotateTransform CenterX="7.5" CenterY="7.5"/>
                        </custom:RadialPanel.RenderTransform>
                        <custom:RadialPanel.Style>
                            <Style TargetType="custom:RadialPanel">                                
                                <Style.Triggers>
                                    <Trigger Property="Visibility" Value="Visible">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(Canvas.RenderTransform).(RotateTransform.Angle)"
                                                                     To="360" Duration="0:0:2" RepeatBehavior="Forever"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </custom:RadialPanel.Style>
                    </custom:RadialPanel>-->
                    <ProgressBar Width="200" Height="10" Background="#1F000000" Foreground="{StaticResource backgroundBrush}" Value="{Binding ProgressValue}"/>
                    <TextBlock Margin="0, 30, 0, 0" TextWrapping="Wrap"                                
                               HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="26.667" 
                               FontWeight="Bold" Foreground="#7EFFFFFF">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0}... ({1}%)">
                                <Binding Path="BusyInfo"/>
                                <Binding Path="ProgressValue"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </StackPanel>               
            </Grid>
        </Border>
            <Grid Background="Black" TextBlock.Foreground="White" TextBlock.FontSize="30">
            <Button Width="100" Height="100">Ok</Button>
                <!--<Grid.Triggers>
                    <EventTrigger RoutedEvent="Grid.Loaded">
                        <BeginStoryboard>
                            <Storyboard TargetProperty="Opacity" RepeatBehavior="Forever">
                                <DoubleAnimation Storyboard.TargetName="title1" BeginTime="0:0:2"
                                                 From="0" To="1" Duration="0:0:2" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetName="title2" BeginTime="0:0:6"
                                                     From="0" To="1" Duration="0:0:2" AutoReverse="True"/>
                                <DoubleAnimation Storyboard.TargetName="title3" BeginTime="0:0:10"
                                                 From="0" To="1" Duration="0:0:2" AutoReverse="True"/>
                                <DoubleAnimation Storyboard.TargetName="title4" BeginTime="0:0:14"
                                                 From="0" To="1" Duration="0:0:2" AutoReverse="True"/>
                                <DoubleAnimation Storyboard.TargetName="title5" BeginTime="0:0:18"
                                                 From="0" To="1" Duration="0:0:2" AutoReverse="True"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0"
                           Name="title1">In a world</TextBlock>
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0"
                           Name="title2">where user interfaces need to be created</TextBlock>
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0"
                           Name="title3">one book</TextBlock>
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0"
                           Name="title4">will explain it all...</TextBlock>
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0"
                           Name="title5">WPF 4.5 Unleashed</TextBlock>-->
            </Grid>
               
    </Grid>
</Window>
